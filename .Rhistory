help(scatterplot)
library(car)
library(car)
help(scatterplot)
Edata <- read.table("rawdata_SLoe_20170214.csv",header=T,sep=",")
summary(Edata)
help("loess")
help("gamma")
help("gam")
qa<-2.85
k<-6
N<-20
cd<-qa*sqrt*(k*(k+1)/6*N)
print(cd)
qa<-2.85
k<-6
N<-20
cd<-qa*sqrt(k*(k+1)/6*N)
print(cd)
qa<-2.85
k<-6
N<-20
cd<-qa*sqrt(k*(k+1)/6/N)
print(cd)
7/N
sqrt(7/N)
qa<-2.85
k<-6
N<-20
cd<-qa*sqrt(k*(k+1)/6/N)
print(cd)
qa<-2.85
k<-6
N<-9
cd<-qa*sqrt(k*(k+1)/6/N)
print(cd)
qa<-2.85
k<-6
N<-30
cd<-qa*sqrt(k*(k+1)/6/N)
print(cd)
help(trimci)
install.packages(“‘WRS”, repos=“http://R-Forge.R-project.org”)
install.packages(“WRS”, repos=“http://R-Forge.R-project.org”)
install.packages("WRS")
install.packages("devtools")
library("devtools")
install_github("mrxiaohe/WRScpp")
library("devtools")
install.packages(c("cobs", "robust", "mgcv", "scatterplot3d", "quantreg", "rrcov", "lars", "pwr", "trimcluster", "mc2d", "psych", "Rfit", "DepthProc", "class", "fda", "parallel"))
install_github("mrxiaohe/WRScpp")
library(MASS)
library(akima)
library(robustbase)
library("devtools")
install_github("mrxiaohe/WRScpp")
library("devtools")
install_github("mrxiaohe/WRScpp")
TP=10
TN=90
FP=9
FN=1
MCC<-(TP*TN-FP*FN)/sqrt((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN))
print(MCC)
TP=5
TN=45
FP=45
FN=5
MCC<-(TP*TN-FP*FN)/sqrt((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN))
print(MCC)
TP=5
TN=0
FP=45
FN=5
MCC<-(TP*TN-FP*FN)/sqrt((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN))
print(MCC)
TP=9
TN=80
FP=10
FN=1
MCC<-(TP*TN-FP*FN)/sqrt((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN))
print(MCC)
TP=80
TN=80
FP=10
FN=10
MCC<-(TP*TN-FP*FN)/sqrt((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN))
print(MCC)
TP=81
TN=80
FP=10
FN=9
MCC<-(TP*TN-FP*FN)/sqrt((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN))
print(MCC)
TP=9
TN=45
FP=5
FN=1
MCC<-(TP*TN-FP*FN)/sqrt((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN))
print(MCC)
TP=45
TN=45
FP=5
FN=5
MCC<-(TP*TN-FP*FN)/sqrt((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN))
print(MCC)
plot(dnorm,-4,4)
plot(dnorm+1,-4,4)
plot(dnorm,1,1)
plot(dnorm,-1,1)
plot(dnorm,-4,4)
abline(v=0)
plot(cars)
1 + 1
install.packages("sensitivity")
install.packages("boot")
x <- morris(model = morris.fun, factors = 20, r = 4, design = list(type = "oat", levels = 5, grid.jump = 3))
library("sensitivity")
x <- morris(model = morris.fun, factors = 20, r = 4, design = list(type = "oat", levels = 5, grid.jump = 3))
print(x)
morris.fun_array <- function(X){
res_vector <- morris.fun(X)
res_matrix <- cbind(res_vector, 2 * res_vector)
array(data = c(res_matrix, 5 * res_matrix), dim = c(length(res_vector), 2, 2))
}
x <- morris(model = morris.fun_array, factors = 20, r = 4, design = list(type = "simplex", scale.factor = 1))
plot(x, y_col = 2, y_dim3 = 2)
title(main = "y_col = 2, y_dim3 = 2")
print(x)
edata<-read.table('LOC_rawdata.csv',header=TRUE,sep=",")
setwd("E:/data_mining/paper2/github/EAposter")
edata<-read.table('LOC_rawdata.csv',header=TRUE,sep=",")
summary(edata)
library(ggplot2)
library(ggjoy)
edata$Dataset<-factor(edata$Dataset,levels = c("bugzilla","columba","jdt","mozilla","platform", "postgres"))
library(ggplot2)
library(ggjoy)
edata$Dataset<-factor(edata$Dataset,levels = c("postgres", "platform", "mozilla", "jdt", "columba", "bugzilla"))
ggplot(edata, aes(x=log(LOC+1,2), y=Dataset))+ geom_joy(aes(fill=Dataset))+theme(legend.position="none")+geom_vline(xintercept = 6,color="red")
edata$Dataset<-factor(edata$Dataset,levels = c("postgres", "platform", "mozilla", "jdt", "columba", "bugzilla"))
ggplot(edata, aes(x=log(LOC+1,2), y=Dataset))+ geom_joy(aes(fill=Dataset))+theme(legend.position="none")
edata<-read.table('10r10f_rawdata.csv',header=TRUE,sep=",")
datasets<-methods<-mtdtypes<-NULL
V_Popt<-V_ACC<-V_AUC<-NULL
for (data in unique(edata$Dataset)){
#print(data)
for (mtd in unique(edata$Method)){
for (type in unique(edata$MethodType)){
if (length(with(edata,which(Dataset==data & Method==mtd & MethodType==type)))>0){
data1<-edata[with(edata,which(Dataset==data & Method==mtd & MethodType==type)),]
sub.Popt<-mean(data1$Popt)
sub.acc<-mean(data1$ACC)
sub.auc<-mean(data1$AUC)
datasets<-c(datasets,data)
methods<-c(methods,mtd)
mtdtypes<-c(mtdtypes,type)
V_Popt<-c(V_Popt,sub.Popt)
V_ACC<-c(V_ACC,sub.acc)
V_AUC<-c(V_AUC,sub.auc)
}
}
}
}
edata<-data.frame(Dataset=datasets,Method=methods,MethodType=mtdtypes,Popt=V_Popt,ACC=V_ACC,AUC=V_AUC)
edata$MethodType<-factor(edata$MethodType, levels = c("Sup.R-pE","Sup.non-EA","Sup.R-ad","EALR","Sup.R-dd", "Unsup", "Random-pE"))
summary(edata)
library(ggplot2)
edata<-edata[edata$MethodType!="Random-pE",]
ggplot(edata, aes(AUC,Popt))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)+
labs(title = "AUC vs Popt while including LOC's outliers")
ggplot(edata, aes(AUC,ACC))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)+
labs(title = "AUC vs ACC while including LOC's outliers")
ggplot(edata, aes(AUC,Popt))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)
ggplot(edata, aes(AUC,ACC))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)
edata<-read.table('cutTukeyFence_rawdata2.csv',header=TRUE,sep=",")
datasets<-methods<-mtdtypes<-NULL
V_Popt<-V_ACC<-V_AUC<-NULL
for (data in unique(edata$Dataset)){
#print(data)
for (mtd in unique(edata$Method)){
for (type in unique(edata$MethodType)){
if (length(with(edata,which(Dataset==data & Method==mtd & MethodType==type)))>0){
data1<-edata[with(edata,which(Dataset==data & Method==mtd & MethodType==type)),]
sub.Popt<-mean(data1$Popt)
sub.acc<-mean(data1$ACC)
sub.auc<-mean(data1$AUC)
datasets<-c(datasets,data)
methods<-c(methods,mtd)
mtdtypes<-c(mtdtypes,type)
V_Popt<-c(V_Popt,sub.Popt)
V_ACC<-c(V_ACC,sub.acc)
V_AUC<-c(V_AUC,sub.auc)
}
}
}
}
edata<-data.frame(Dataset=datasets,Method=methods,MethodType=mtdtypes,Popt=V_Popt,ACC=V_ACC,AUC=V_AUC)
summary(edata)
edata$MethodType<-factor(edata$MethodType, levels = c("R-ee","R-non-EA","R-ad","EALR","R-dd", "R-unsup"))
ggplot(edata, aes(AUC,Popt))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)
ggplot(edata, aes(AUC,ACC))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)
ggplot(edata, aes(AUC,Popt))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)+
labs(title = "AUC vs Popt while including LOC's outliers")
edata<-read.table('cutTukeyFence_rawdata2.csv',header=TRUE,sep=",")
datasets<-methods<-mtdtypes<-NULL
V_Popt<-V_ACC<-V_AUC<-NULL
for (data in unique(edata$Dataset)){
#print(data)
for (mtd in unique(edata$Method)){
for (type in unique(edata$MethodType)){
if (length(with(edata,which(Dataset==data & Method==mtd & MethodType==type)))>0){
data1<-edata[with(edata,which(Dataset==data & Method==mtd & MethodType==type)),]
sub.Popt<-mean(data1$Popt)
sub.acc<-mean(data1$ACC)
sub.auc<-mean(data1$AUC)
datasets<-c(datasets,data)
methods<-c(methods,mtd)
mtdtypes<-c(mtdtypes,type)
V_Popt<-c(V_Popt,sub.Popt)
V_ACC<-c(V_ACC,sub.acc)
V_AUC<-c(V_AUC,sub.auc)
}
}
}
}
edata<-data.frame(Dataset=datasets,Method=methods,MethodType=mtdtypes,Popt=V_Popt,ACC=V_ACC,AUC=V_AUC)
edata<-read.table('cutTukeyFence_rawdata.csv',header=TRUE,sep=",")
datasets<-methods<-mtdtypes<-NULL
V_Popt<-V_ACC<-V_AUC<-NULL
for (data in unique(edata$Dataset)){
#print(data)
for (mtd in unique(edata$Method)){
for (type in unique(edata$MethodType)){
if (length(with(edata,which(Dataset==data & Method==mtd & MethodType==type)))>0){
data1<-edata[with(edata,which(Dataset==data & Method==mtd & MethodType==type)),]
sub.Popt<-mean(data1$Popt)
sub.acc<-mean(data1$ACC)
sub.auc<-mean(data1$AUC)
datasets<-c(datasets,data)
methods<-c(methods,mtd)
mtdtypes<-c(mtdtypes,type)
V_Popt<-c(V_Popt,sub.Popt)
V_ACC<-c(V_ACC,sub.acc)
V_AUC<-c(V_AUC,sub.auc)
}
}
}
}
edata<-data.frame(Dataset=datasets,Method=methods,MethodType=mtdtypes,Popt=V_Popt,ACC=V_ACC,AUC=V_AUC)
summary(edata)
edata$MethodType<-factor(edata$MethodType, levels = c("R-ee","R-non-EA","R-ad","EALR","R-dd", "R-unsup"))
ggplot(edata, aes(AUC,Popt))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)+
labs(title = "AUC vs Popt while including LOC's outliers")
ggplot(edata, aes(AUC,ACC))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)+
labs(title = "AUC vs ACC while including LOC's outliers")
edata<-read.table('cutTukeyFence_rawdata.csv',header=TRUE,sep=",")
edata<-read.table('cutTukeyFence_rawdata.csv',header=TRUE,sep=",")
datasets<-methods<-mtdtypes<-NULL
V_Popt<-V_ACC<-V_AUC<-NULL
for (data in unique(edata$Dataset)){
#print(data)
for (mtd in unique(edata$Method)){
for (type in unique(edata$MethodType)){
if (length(with(edata,which(Dataset==data & Method==mtd & MethodType==type)))>0){
data1<-edata[with(edata,which(Dataset==data & Method==mtd & MethodType==type)),]
sub.Popt<-mean(data1$Popt)
sub.acc<-mean(data1$ACC)
sub.auc<-mean(data1$AUC)
datasets<-c(datasets,data)
methods<-c(methods,mtd)
mtdtypes<-c(mtdtypes,type)
V_Popt<-c(V_Popt,sub.Popt)
V_ACC<-c(V_ACC,sub.acc)
V_AUC<-c(V_AUC,sub.auc)
}
}
}
}
edata<-data.frame(Dataset=datasets,Method=methods,MethodType=mtdtypes,Popt=V_Popt,ACC=V_ACC,AUC=V_AUC)
edata$MethodType<-factor(edata$MethodType, levels = c("Sup.R-pE","Sup.non-EA","Sup.R-ad","EALR","Sup.R-dd", "Unsup", "Random-pE"))
ggplot(edata, aes(AUC,Popt))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)+
labs(title = "AUC vs Popt while including LOC's outliers")
ggplot(edata, aes(AUC,ACC))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)+
labs(title = "AUC vs ACC while including LOC's outliers")
ggplot(edata, aes(AUC,ACC))+
geom_point(aes(color=MethodType,shape=Dataset),size=1.8)+
stat_smooth(aes(color=MethodType), method="glm", se=F)+
labs(title = "AUC vs ACC while excluding LOC's outliers")
